version: '3.8'
services:
  mywork-application:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: mywork-application
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=local
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: 1GB
    networks:
      mywork-network:
        ipv4_address: 172.10.0.14
    depends_on:
      - mysql
  mysql:
    container_name: 'mywork_rdb'
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - ./rdb/initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: 'mywork2503'
      MYSQL_DATABASE: mywork_db
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: 1GB
    networks:
      mywork-network:
        ipv4_address: 172.10.0.2
  localstack:
    container_name: "localstack"
    image: localstack/localstack:0.14.3
    ports:
      - "4566:4566" # localstack port
      - "4572:4572" # aws s3 port
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_SOCK=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      # CORS 설정 추가
      - EXTRA_CORS_ALLOWED_ORIGINS=http://localhost:3000
      - EXTRA_CORS_ALLOWED_HEADERS=*
      - EXTRA_CORS_ALLOWED_METHODS=GET,PUT,POST,DELETE,HEAD,OPTIONS
    volumes:
      - "./localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./init-scripts:/etc/localstack/init/ready."
  grafana:
    image: grafana/grafana:11.5.6
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ../grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      mywork-network:
        ipv4_address: 172.10.0.4
    depends_on:
      - prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../grafana-data:/var/lib/grafana
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      mywork-network:
        ipv4_address: 172.10.0.7
    depends_on:
      - mysqld-exporter
      - mywork-application
  mysqld-exporter:
    image: prom/mysqld-exporter:latest
    ports:
      - "9104:9104"
    volumes:
      - ./mysqld-exporter/.my.cnf:/cfg/.my.cnf
    command:
      - --config.my-cnf=/cfg/.my.cnf
      - --mysqld.address=172.10.0.2:3306
    networks:
      mywork-network:
        ipv4_address: 172.10.0.5
    depends_on:
      - mysql
  influxdb:
    image: bitnami/influxdb:1.8.5
    container_name: mywork_influx
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=mywork_k6
      - INFLUXDB_ADMIN_USER_PASSWORD=mywork2025
    networks:
      mywork-network:
        ipv4_address: 172.10.0.6
networks:
  mywork-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.0.0/16
          gateway: 172.10.0.1
